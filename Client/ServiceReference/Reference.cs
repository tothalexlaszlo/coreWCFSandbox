//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSMPRequestResponseRP", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    public partial class WSMPRequestResponseRP : object
    {
        
        private ServiceReference.ListSupportedDialects ReadDialectsField;
        
        private ServiceReference.WSMPProfiles WSMPProfilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference.ListSupportedDialects ReadDialects
        {
            get
            {
                return this.ReadDialectsField;
            }
            set
            {
                this.ReadDialectsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference.WSMPProfiles WSMPProfiles
        {
            get
            {
                return this.WSMPProfilesField;
            }
            set
            {
                this.WSMPProfilesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListSupportedDialects", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    public partial class ListSupportedDialects : object
    {
        
        private System.Uri[] DataDialectsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri[] DataDialects
        {
            get
            {
                return this.DataDialectsField;
            }
            set
            {
                this.DataDialectsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSMPProfiles", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    public partial class WSMPProfiles : object
    {
        
        private System.Uri[] COIProfileField;
        
        private System.Uri[] MessageTransmissionProfileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri[] COIProfile
        {
            get
            {
                return this.COIProfileField;
            }
            set
            {
                this.COIProfileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri[] MessageTransmissionProfile
        {
            get
            {
                return this.MessageTransmissionProfileField;
            }
            set
            {
                this.MessageTransmissionProfileField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ISampleService")]
    public interface ISampleService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetResourcePropertyDocument", ReplyAction="http://tempuri.org/ISampleService/GetResourcePropertyDocumentResponse")]
        System.Threading.Tasks.Task<ServiceReference.WSMPRequestResponseRP> GetResourcePropertyDocumentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ISampleServiceChannel : ServiceReference.ISampleService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<ServiceReference.ISampleService>, ServiceReference.ISampleService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), SampleServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference.WSMPRequestResponseRP> GetResourcePropertyDocumentAsync()
        {
            return base.Channel.GetResourcePropertyDocumentAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISampleService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_ISampleService))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                httpsBindingElement.AuthenticationScheme = System.Net.AuthenticationSchemes.Negotiate;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISampleService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5000/SampleService/basichttp");
            }
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_ISampleService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/SampleService/WSHttps");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISampleService,
            
            WSHttpBinding_ISampleService,
        }
    }
}
